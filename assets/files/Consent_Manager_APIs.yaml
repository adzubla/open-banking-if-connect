openapi: 3.0.1

info:
  title: APIs de gerenciamento de consentimento
  description: |
  
    Este documento fornece a especificação OAS3 para as APIs fornecidas pela gerenciamento de consentimento TecBan.
      
    Essas APIs são implementadas pela TecBan e devem ser chamadas pela IF para localizar, modificar e excluir consentimentos.

  version: Versão 2.2 Lançamento 26.4

tags:
  - name: consents

paths:
  /consents:
    post:
      tags:
        - consents
      summary: Cria um novo consentimento
      operationId: addConsent
      requestBody:
        description: |
          Um end-point para criar um novo consentimento

          

        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConsentPostRequest'

      responses:
        201:
          description: |
            Indicates the successful creation of a consent

          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsentPostResponse'

        400:
          description: |
            Indicates a failure to create the consent

          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          
  /consents/{consentId}:
    get:
      tags:
        - consents
      summary: Retorna um consentimento por id
      operationId: getConsentsByConsentId

      parameters:
        - $ref: '#/components/parameters/consentId'

      responses:
        200:
          description: operação bem sucedida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsentGetResponse'

        400:
          description: |
            Indica falha ao criar um consentimento

          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
    patch:
      tags:
        - consents
      summary: Corrige um ou mais campos em um consentimento

      description: |
        Esta operação permite que uma instituição financeira modifique os campos em um `consentBody` de consentimento.

        Geralmente, esta API seria chamada após autorização de consentimento pelo Usuário Pagador. Isto permitiria
        que a IF corrija o `psuIdentifier` e `accountIds` associandos com o consentimento
        
      operationId: patchConsent

      parameters:
        - $ref: '#/components/parameters/consentId'

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConsentPatchRequest'

      responses:
        204:
          description: Resposta vazia
        
        400:
          description: |
            Indica falha na criação do consentimento

          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /psu/{userId}/consents:
    get:
      tags:
        - consents
      summary: Retorna todos os consentimentos associados a um determinado usuário pagador

      description: |
        Retorna um array de consentimentos associados com o usuário pagador.

        Se nenhum consentimento associado com o usuário pagador puder ser encontrado, então será retornada um array vazio.
        
        O caminho do parâmetro userId corresponde ao campo `psuIdentifiers.userId` no consentimento.

      operationId: getConsents

      parameters:
        - $ref: '#/components/parameters/userId'

      responses:
        200:
          description: |
            Resposta bem sucedida

          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsentsGetResponse'
        
        400:
          description: |
            Indica falha ao retornar o consentimento

          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'        

components:
  schemas:
    ConsentPostRequest:
      type: object
      properties:
        requestUrl:
          type: string
          description: |
            URL própria

        consentType:
          $ref: '#/components/schemas/ConsentType'

        request:
          $ref: '#/components/schemas/Request'

        requestHeaders:
          $ref: '#/components/schemas/RequestHeaders'

        tpp:
          $ref: '#/components/schemas/TPP'

      required:
        - consentType
        - request
        - requestHeaders
        - tpp
      additionalProperties: false

    ConsentPostResponse:
      type: object
      properties:
        id:
          type: string
          description: |
            Um identificador único para consentimento no formato uuid-v4. 

            Isso é diferente do ConsentId que é comunicado aos usuários pagadores e parceiros.
        
        requestUrl:
          type: string
          format: url
          description: |
            URL própria

        consentType:
          $ref: '#/components/schemas/ConsentType'

        request:
          $ref: '#/components/schemas/Request'

        requestHeaders:
          $ref: '#/components/schemas/RequestHeaders'

        consentBody:
          $ref: '#/components/schemas/ConsentBody'

        tpp:
          $ref: '#/components/schemas/TPP'

      required:
        - id
        - consentType
        - request
        - requestHeaders
        - tpp

      additionalProperties: false        

    #
    # Resposta da operação GET de consentimento
    #
    ConsentGetResponse:
      type: object
      description: |

        Um consentimento no estado atual.

        Se o consentimento foi autorizado, então pode-se esperar que a IF 
        tenha corrigido os campos "accountIds" e "psuIdentifier".

        Além disso, a IF também pode corrigir em um conjunto arbitrário de 
        campos juntamente com o consentimento no campo "supplementaryInformation".

      properties:
        id:
          type: string
          description: |
            Um identificador único para consentimento no formato uuid-v4. 

            Isso é diferente do ConsentId que é comunicado aos usuários pagadores e parceiros.

        consentType:
          $ref: '#/components/schemas/ConsentType'

        request:
          $ref: '#/components/schemas/Request'

        requestHeaders:
          $ref: '#/components/schemas/RequestHeaders'

        consentBody:
          $ref: '#/components/schemas/ConsentBody'

        tpp:
          $ref: '#/components/schemas/TPP'

        psuIdentifiers:
          $ref: '#/components/schemas/PSUIdentifiers'

        accountIds:
          $ref: '#/components/schemas/AccountIds'

      required:
        - id
        - consentType
        - request
        - requestHeaders
        - tpp

      additionalProperties: false        

    #
    # Resposta da operação PATCH de consentimento
    #
    ConsentPatchRequest: 
      type: object
      description: |
        Descreve os campos a serem corrigidos e seus valores correspondentes.

        Os campos suportados diferem com base no padrão da API ao qual o consentimento pertence.

      oneOf:
        - $ref: '#/components/schemas/OBIEConsentPatchRequest'

    OBIEConsentPatchRequest:
      allOf:
        - $ref: '#/components/schemas/CommonConsentPatch'
        - type: object
          properties:
            consentBody.Data.Status:
              $ref: '#/components/schemas/ConsentStatusEnum'  
    
    CommonConsentPatch:
      type: object
      properties:
        psuIdentifiers:
          $ref: '#/components/schemas/PSUIdentifiers'
        accountIds:
          $ref: '#/components/schemas/AccountIds'
        supplementaryInformation:
          type: object
          additionalProperties: true


    ConsentsGetResponse: 
      type: array
      items:
        $ref: '#/components/schemas/ConsentGetResponse'

    #
    # Objetos comuns
    #
    ConsentType:
      type: string
      description: |
        O tipo de consentimento que está sendo criado

        Cada instância da IF pode suportar um conjunto diferente de tipos de consentimento. O gestor de consentimento apóia a criação de consentimentos de diferentes tipos dependendo dos padrões suportados.

        For example, for the UK OBIE standards, the following consent types are available:
          - account-access-consents
          - domestic-payment-consents
          - future-dated-payment-consents
          - standing-order-consents
          - international-payment-consents
          - international-future-dated-payment-consents
          - international-standing-order-consents
    
    Request: 
      type: object
      description: |
        Todo o corpo da requisição HTTP que foi recebida pela TecBan proveniente do parceiro.

        O gestor de consentimento usa o tipo de consentimento para identificar o esquema que deve ser usado para validar a requisição. (Esses esquemas são definido por padrões subjacentes)
      additionalProperties: true

    RequestHeaders:
      type: object
      description: |
        Todo o conjunto de cabeçalhos da requisição HTTP que foi recebida pela TecBan proveniente do parceiro.
      additionalProperties: true

    TPP:
      type: object
      description: |
        O registro do parceiro, mantido pela TecBan.

        Se a conexão do parceiro TecBan tiver sido integrada a um diretório, o `directoryRecord` fornecerá o registro do diretório do parceiro mantido pela TecBan
      properties:
        clientId:
          type: string
        orgId:
          type: string
        softwareStatementId:
          type: string
        directoryRecord:
          type: object
          additionalProperties: true

    ConsentBody:
      type: object
      description: |
        Um objeto representando o estado atual de consentimento. 
        Isso inclui a requisão inteira, aumentada por propriedades adicionais computadas
        (ex. ids, cargas etc)

        O gestor de consentimento da TecBan atende a consentimentos de vários padrões. O verdadeiro esquema para cada consentBody seria determinado pelo padrão subjacente.

      oneOf:
        - $ref: '#/components/schemas/OBIEConsentBody'

    OBIEConsentBody:
      type: object
      description: |
        Uma representação do corpo de consentimento para um consentimento dos padrões Open Banking.

        Deve-se observar que todo o conteúdo do payload (não apenas os campos listados abaixo) é armazenado.

         A lista de campos abaixo identifica os campos comuns em todos os consentimento do Open Banking.    

      properties:
        Data:
          type: object
          properties:
            ConsentId:
              type: string
              description: |
                Um ConsentId gerado pela IF para o consentimento.

                Isso é diferente do campo `id` de nível superior que é usado pelo gestor de consentimento.

            CreationDateTime:
              type: string
              format: date-time
              description: An ISO date-time representing when the consent was created

            Status:
              $ref: '#/components/schemas/ConsentStatusEnum'

            StatusUpdateDateTime:
              type: string
              format: date-time
              description: Uma data-hora ISO que representa quando o status de consentimento foi atualizado pela última vez

          required:
            - ConsentId
            - CreationDateTime
            - Status
            - StatusUpdateDateTime
          additionalProperties: true

      required:
        - Data
      additionalProperties: true

    ConsentStatusEnum:
      type: string
      enum:
        - AwaitingAuthorisation
        - Authorised
        - Consumed
        - Rejected
        - Revoked
      description: O status atual do consentimento
  
    PSUIdentifiers:
      type: object
      description: |
        O usuário pagador está associado com este consentimento. 
        
        O objeto "PSUIdentifiers" pode ter campos personalizados arbitrários que uma IF pode usar para identificar o usuário pagador.

        No entanto, todos "PSUIdentifiers" devem ter obrigatoriamente um campo "userId" que fornece um
        id único para o usuário pagador.

        O consentimento é inicialemente criado sem um identificador do usuário pagador. 
        
        O valor deve ser especificado assim que o consentimento for autorizado.

      properties:
        userId:
          type: string

      required:
        - userId

      additionalProperties: true

    AccountIds:
      type: array
      items:
        type: string
      minItems: 1
      description: |-
        Um array de ids de contas associadas com o consentimento. O array deve ser preenchido assim que o consentimento for autorizado.
        Para consentimento de pagamentos, o array deve sempre ter um elemento -  a conta devedora a qual o pagamento será feito 
        Para consentimento do PC, o arranjo deve sempre ter um elemento - conta para a qual as requisições de confirmação de fundos serão respondidas. 
        Para requições sobre informação da conta, o arranjo pode conter múltiplos valores, representando cada uma das contas de pagamento para as quais um serviço de informação de conta será fornecido.
      
    Error:
      type: object
      properties:
        errorCode:
          type: string
          description: Código de erro identificando o problema ocorrido
        errorMessage:
          type: string
          description: Mensagem descrevendo o problema ocorrido

  parameters:
    consentId:
      name: consentId
      in: path
      schema:
        type: string
      required: true
      description: Identificador do consentimento 

    userId:
      name: userId
      in: path
      schema:
        type: string
      required: true
      description: |
        Identifica um usuário pagador associado com um consentimento.

        Isso deve corresponder ao campo "psuIdentifier.userId".  


  securitySchemes:
    api_key:
      type: apiKey
      name: api_key
      in: header
      description: TLS-MA and JWS in authorization header
