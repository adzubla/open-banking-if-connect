openapi: 3.0.1
info:
  title: TecBan Bank Connect - PIS APIs
  description: |
    
    Este documento fornece as especificações OAS3 para o serviço de inicio de pagamentos APIs para TecBan Bank Connect.
    
    Essas APIs devem ser implementadas por uma IF para que a Ozone
    possa fornecer recursos do serviço de inicio de pagamentos para parceiros

  version: Versão 2.2 Lançamento 26.4
  
tags:
- name: payments
  description: |
    APIs que devem ser implementadas por IFs para expor a capacidade do serviço de início de pagamentos aos parceiros.

paths: 
  /payments-consent/action/validate:
    post: 
      tags:
        - payments
      summary: Validação de ação de pagamento
      description: |
        A API é chamada pela Ozone para permitir que uma IF realize validações adicionais
        antes que um consentimento de pagamento seja criado.

        O corpo da solicitação contém todo o consentimento de pagamento, juntamente com informações contextuais.

        Normalmente, isso pode ser usado para situações como:
        - soft validation da conta do devedor (por exemplo, para garantir que é uma conta do devedor gerenciada pela IF)
        - preencher cobranças e informações sobre taxas de câmbio (em versões futuras)

        Observe que uma IF só precisa implementar esta API onde ele precisa correlacionar informações na carga útil de consentimento
        com os dados mantidos em seus sistemas. Se este não for o caso, validações "locais" podem ser configuradas na Ozone que não
        requer uma chamada remota.

        A IF deve retornar um `PaymentConsentValidateResponse` que inclui um status. Se o status for definido como `válido`, o
        o consentimento é salvo e o processamento continua.

        Se o status for definido como `inválido`, o processamento falha e uma resposta de erro é enviada ao parceiro.

      operationId: validatePaymentConsent

      parameters:
        # common header parameters that set context
        - $ref: '#/components/parameters/aspspId'
        - $ref: '#/components/parameters/callerOrgId'
        - $ref: '#/components/parameters/callerClientId'
        - $ref: '#/components/parameters/callerSoftwareStatementId'
        - $ref: '#/components/parameters/apiUri'
        - $ref: '#/components/parameters/apiOperation'
        - $ref: '#/components/parameters/consentId'
        - $ref: '#/components/parameters/callerInteractionId'
        - $ref: '#/components/parameters/ozoneInteractionId'
        - $ref: '#/components/parameters/psuIdentifier'

      requestBody:
        required: true
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/PaymentConsentValidateRequest'

      responses:
        200:
          description: Operação bem sucedida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentConsentValidateResponse'
        400:
          description: Operação falhou
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /payments:
    post:
      tags:
        - payments
      summary: Realizar um pagamento
      description: |
        Esta API é chamada pela Ozone Bank Connect para instruir uma IF a iniciar um pagamento assim que receber um pagamento
        instrução de um parceiro que passou em todas as validações locais.

        A IF deve processar o pagamento e indicar uma resposta de falha (se o pagamento falhar na validação técnica) ou um
        resposta de sucesso (se o pagamento for aprovado na validação técnica e for submetido aos trilhos de pagamento para processamento)

        A IF deve gerar um `PaymentId` único que pode ser enviado ao parceiro como referência para o pagamento.
        
      operationId: makePayment
      parameters:
        # parâmetros de cabeçalho comuns que definem o contexto
        - $ref: '#/components/parameters/aspspId'
        - $ref: '#/components/parameters/callerOrgId'
        - $ref: '#/components/parameters/callerClientId'
        - $ref: '#/components/parameters/callerSoftwareStatementId'
        - $ref: '#/components/parameters/apiUri'
        - $ref: '#/components/parameters/apiOperation'
        - $ref: '#/components/parameters/consentId'
        - $ref: '#/components/parameters/callerInteractionId'
        - $ref: '#/components/parameters/ozoneInteractionId'
        - $ref: '#/components/parameters/psuIdentifier'
      
      requestBody:
        required: true
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/PaymentRequest'

      responses:
        200:
          description: Operação bem sucedida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResponse'
        400:
          description: Operação falhou
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []

  /payments/:paymentId:
    get: 
      tags:
        - payments
      summary: Obter dados de pagamento
      description: |
        A Ozone pode chamar esta API de IFs para recuperar informações de pagamento.
      parameters:
        # parâmetros de cabeçalho comuns que definem o contexto
        - $ref: '#/components/parameters/aspspId'
        - $ref: '#/components/parameters/callerOrgId'
        - $ref: '#/components/parameters/callerClientId'
        - $ref: '#/components/parameters/callerSoftwareStatementId'
        - $ref: '#/components/parameters/apiUri'
        - $ref: '#/components/parameters/apiOperation'
        - $ref: '#/components/parameters/consentId'
        - $ref: '#/components/parameters/callerInteractionId'
        - $ref: '#/components/parameters/ozoneInteractionId'
        - $ref: '#/components/parameters/psuIdentifier'
    
      responses:
        200:
          description: Operação bem sucedida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResponse'
        400:
          description: Operação falhou
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /payments/:paymentId/details:
    get: 
      tags:
        - payments
      summary: Obter dados detalhados de pagamento
      description: |
        Em situações em que uma API suporta a recuperação de informações detalhadas de pagamento,
        a Ozone pode chamar esta API de IFs para recuperar informações detalhadas.

      parameters:
        # parâmetros de cabeçalho comuns que definem o contexto
        - $ref: '#/components/parameters/aspspId'
        - $ref: '#/components/parameters/callerOrgId'
        - $ref: '#/components/parameters/callerClientId'
        - $ref: '#/components/parameters/callerSoftwareStatementId'
        - $ref: '#/components/parameters/apiUri'
        - $ref: '#/components/parameters/apiOperation'
        - $ref: '#/components/parameters/consentId'
        - $ref: '#/components/parameters/callerInteractionId'
        - $ref: '#/components/parameters/ozoneInteractionId'
        - $ref: '#/components/parameters/psuIdentifier'
      responses:
        200:
          description: Operação bem sucedida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentDetailsResponse'
        400:
          description: Operação falhou
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'


components:
  schemas:
    PaymentConsentValidateRequest:
      type: object
      oneOf: 
        - $ref: '#/components/schemas/ConsentGetResponse'

    ConsentGetResponse:
      type: object
      description: |

        Um consentimento em seu estado atual.

        Se o consentimento foi autorizado, então pode-se esperar que a IF
        teria corrigido nos campos `accountIds` e` psuIdentifier`.

        Além disso, a IF também pode corrigir em um conjunto arbitrário de campos junto com o consentimento
        no campo `SupplementaryInformation`.

      properties:
        id:
          type: string
          description: |
            Um identificador exclusivo para o consentimento no formato uuid-v4.

            Isso é diferente do ConsentId que é comunicado às usuários pagadores e parceiros.

        consentType:
          $ref: '#/components/schemas/ConsentType'

        request:
          $ref: '#/components/schemas/Request'

        requestHeaders:
          $ref: '#/components/schemas/RequestHeaders'

        consentBody:
          $ref: '#/components/schemas/ConsentBody'

        tpp:
          $ref: '#/components/schemas/TPP'

        psuIdentifiers:
          $ref: '#/components/schemas/PSUIdentifiers'

        accountIds:
          $ref: '#/components/schemas/AccountIds'

      required:
        - id
        - consentType
        - request
        - requestHeaders
        - tpp

      additionalProperties: false        

    ConsentType:
      type: string
      description: |
        O tipo de consentimento que está sendo criado.

        Cada instância da IF pode suportar um conjunto diferente de tipos de consentimento
        O Consent Manager apóia a criação de consentimentos de diferentes tipos de consentimento
        dependendo dos padrões suportados.

        Por exemplo, para os padrões do Open Banking Brasil, os seguintes tipos de consentimento estão disponíveis:
          - account-access-consents
          - domestic-payment-consents
          - future-dated-payment-consents
          - standing-order-consents
          - international-payment-consents
          - international-future-dated-payment-consents
          - international-standing-order-consents

    Request: 
      type: object
      description: |
        Todo o corpo da solicitação HTTP que foi recebido pela TecBan proveniente do parceiro.

        O tipo pode ser usado para identificar o esquema
        que deve ser usado para validar a solicitação. (Esses esquemas são definidos pelo
        padrão subjacente)
      additionalProperties: true

    RequestHeaders:
      type: object
      description: |
        Todo o conjunto de cabeçalhos de solicitação HTTP que foi recebido pela TecBan proveniente do parceiro.
      additionalProperties: true

    ConsentBody:
      type: object
      description: |
        Um objeto que representa o estado atual do consentimento.
        Isso inclui toda a solicitação, aumentada por propriedades computadas adicionais
        (por exemplo, ids, cobranças etc.)

        O gestor de consentimento TecBan atende às autorizações de vários padrões. O esquema real
        para cada consentimento, o corpo seria determinado pelo padrão subjacente.

      oneOf:
        - $ref: '#/components/schemas/OBIEConsentBody'

    OBIEConsentBody:
      type: object
      description: |
        Uma representação de um corpo de consentimento para um consentimento dos padrões OB.

        Deve-se observar que toda a carga útil do conteúdo (não apenas os campos listados abaixo) é armazenada.

        A lista de campos abaixo identifica os campos comuns em todas as autorizações do OB.  

      properties:
        Data:
          type: object
          properties:
            ConsentId:
              type: string
              description: |
                Um ConsentId gerado pela IF para o consentimento.

                Isso é diferente do campo `id` de nível superior que é usado pelo Consent Manager.

            CreationDateTime:
              type: string
              format: date-time
              description: An ISO date-time representing when the consent was created

            Status:
              $ref: '#/components/schemas/ConsentStatusEnum'

            StatusUpdateDateTime:
              type: string
              format: date-time
              description: An ISO date-time representing when the consent status was last updated

          required:
            - ConsentId
            - CreationDateTime
            - Status
            - StatusUpdateDateTime
          additionalProperties: true

      required:
        - Data
      additionalProperties: true

    ConsentStatusEnum:
      type: string
      enum:
        - AwaitingAuthorisation
        - Authorised
        - Consumed
        - Rejected
        - Revoked
      description: O status atual do consentimento
  
    TPP:
      type: object
      description: |
        O registro do parceiro detido pela TecBan.

        Se o Ozone parceiro Connect foi integrado em um diretório, o `directoryRecord`
        fornece o registro do diretório do parceiro mantido pela TecBan.
      properties:
        clientId:
          type: string
        orgId:
          type: string
        softwareStatementId:
          type: string
        directoryRecord:
          type: object
          additionalProperties: true

    PSUIdentifiers:
      type: object
      description: |
        A usuário pagador associada a este consentimento.
        
        O objeto `PSUIdentifiers` pode ter campos personalizados artitrários que uma IF pode usar para
        identificar o usuário pagador.

        No entanto, todos os `PSUIdentifiers` devem ter um campo` userId` obrigatório que fornece um único
        ID do usuário para a usuário pagador.

        O consentimento é inicialmente criado sem um usuário pagador identificado.
        
        O valor deve ser especificado assim que o consentimento for autorizado.

      properties:
        userId:
          type: string

      required:
        - userId

      additionalProperties: true

    AccountIds:
      type: array
      items:
        type: string
      minItems: 1
      description: |-
        Uma série de IDs de conta associados ao consentimento. O array deve ser preenchida assim que o consentimento for autorizado.
        Para consentimentos de pagamento, o array deve sempre ter um elemento - a conta do devedor a partir da qual o pagamento será feito
        Para consentimentos do PC, o array deve sempre ter um elemento - a conta para a qual as solicitações de confirmação de fundos serão respondidas
        Para solicitações de informações da conta, o array pode conter vários valores, representando cada uma das contas de pagamento para as quais um serviço de informações da conta será fornecido.

    PaymentConsentValidateResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            status:
              type: string
              $ref: '#/components/schemas/ValidateResponseStatusEnum'
            code:
              type: string
            description:
              type: string

        meta:
          $ref: '#/components/schemas/Meta'

    ValidateResponseStatusEnum:
      type: string
      enum:
        - valid
        - invalid

    PaymentRequest:
      type: object
      properties:
        requestUrl:
          type: string
          description: |
            O URL (TecBan) em que o parceiro solicitou o pagamento

        paymentType:
          $ref: '#/components/schemas/PaymentType'

        request:
          $ref: '#/components/schemas/Request'

        requestHeaders:
          $ref: '#/components/schemas/RequestHeaders'

        tpp:
          $ref: '#/components/schemas/TPP'

      required:
        - consentType
        - request
        - requestHeaders
        - tpp

      additionalProperties: false

    PaymentType:
      type: string
      description: |
        O tipo de pagamento que está sendo criado.

        Cada instância da IF pode suportar um conjunto diferente de tipos de pagamento
        dependendo dos padrões suportados.

        Por exemplo, para os padrões do OB do Brasil, os seguintes tipos de pagamento estão disponíveis:
          - domestic-payment-consents
          - future-dated-payment-consents
          - standing-order-consents
          - international-payment-consents
          - international-future-dated-payment-consents
          - international-standing-order-consents
    
    PaymentResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Payment'     
        meta:
          $ref: '#/components/schemas/Meta'

    Payment:
      type: object
      description: |
        Um descritor para um pagamento.

        Este é um objeto composto que pode ser expandido no futuro para suportar
        tipos de pagamento adicionais para novos padrões de API e tipos de pagamento.
      oneOf:
        - $ref: '#/components/schemas/GenericPaymentResponse'
    

    GenericPaymentResponse:
      type: object
      properties:
        id:
          type: string
        status:
          $ref: '#/components/schemas/PaymentStatusEnum'
        creationDateTime:
          type: string
          format: date-time
        statusUpdateDateTime:
          type: string
          format: date-time
      required:
        - id
        - status
        - creationDateTime
        - statusUpdateDateTime

      additionalProperties: false
    
    PaymentDetails:
      type: object
      properties:
        id:
          type: string
        status:
          $ref: '#/components/schemas/PaymentStatusEnum'
        statusUpdateDateTime:
          type: string
          format: date-time
        statusDetails:
          type: array
          items:
            $ref: '#/components/schemas/PaymentStatusDetails'
      required:
        - id
        - status
        - statusUpdateDateTime
    
    PaymentStatusDetails:
      type: object
      properties:
        localInstrament:
          type: string
        status:
          $ref: '#/components/schemas/PaymentStatusEnum'
        statusReason:
          type: string
        statusReasonDescriptio:
          type: string
      required:
        - status
      additionalProperties: false

    PaymentStatusEnum:
      type: string
      enum:
        - Pending
        - Rejected
        - AcceptedSettlementInProcess
        - AcceptedSettlementCompleted
        - AcceptedWithoutPosting
        - AcceptedCreditSettlementCompleted

    PaymentDetailsResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/PaymentDetails'     
        meta:
          $ref: '#/components/schemas/Meta'  

    #
    # Common types
    #
    Meta:
      type: object
      additionalProperties: false
      
    Error:
      type: object
      properties:
        errorCode:
          type: string
          description: Código de erro que identifica o problema ocorrido
        errorMessage:
          type: string
          description: Mensagem descrevendo o problema ocorrido

  parameters:
    aspspId:
      name: o3-aspsp-id
      in: header
      schema:
        type: string
      required: true
      description: Identificador da IF para o qual a solicitação é direcionada

    callerOrgId:
      name: o3-caller-org-id
      in: header
      schema:
        type: string
      required: false
      description: Um identificador para a organização que chama a API

    callerClientId:
      name: o3-caller-client-id
      in: header
      schema:
        type: string
      required: false
      description: Um identificador para o clientId OIDC chamando a API

    callerSoftwareStatementId:
      name: o3-caller-software-statement-id
      in: header
      schema:
        type: string
      required: false
      description: Um identificador para a homologação do software que chama a API
      
    apiUri: 
      name: o3-api-uri
      in: header
      schema:
        type: string
      required: true
      description: O URL parametrizado da API que está sendo chamada pelo requisitante
      
    apiOperation:
      name: o3-api-operation
      in: header
      schema:
        type: string
      required: true
      description: A operação da API realizada pelo requisitante (ex. GET, POST, PUT, DELETE, PATCH)
      
    consentId:
      name: o3-consent-id
      in: header
      schema:
        type: string
      required: false
      description: O consentId para o qual esta chamada está sendo feita
      
    callerInteractionId:
      name: o3-caller-interaction-id
      in: header

      schema:
        type: string
      required: false
      description: O ID de interação passado pelo autor da chamada, se houver
      
    ozoneInteractionId:
      name: o3-ozone-interaction-id
      in: header
      schema:
        type: string
      required: true
      description: Um ID de interação gerado pela TecBan se o requisitante não enviou um. Se o callerInteractionId for especificado, ele terá o mesmo valor.
      
    psuIdentifier:
      name: o3-psu-identifier
      in: header
      schema:
        type: string
      required: false
      description: Uma representação codificada em Base64 do objeto JSON psuIdentifier.

    pageNumber:
      name: page
      in: query
      schema:
        type: string
      required: false
      description: Número da página a ser devolvido.

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT